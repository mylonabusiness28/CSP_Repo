datatype A = yes | no

channel add, query, push, pop : {0..2}
channel answer : A

CONJUNTO = SET({})

SET(S) = add?x -> SET(union(S, {x})) -- declaração de união entre conjuntos
         [] query?y ->
         (if member(y, S) -- função que testa se o valor y pertence ao conjunto S
         then answer!yes -> SET(S)
         else answer!no -> SET(S))

ALPHA=

STACK = push?x -> (NODE(x) {|add,query,push,pop|} STACK(i)) \ (i.push,i.pop) 
                    [] pop!empty -> STACK

STACK(i) = push?x -> NODE(x)

NODE(x) = query?x -> (if member(y, x) -- função que testa se o valor y pertence ao node X
                      then answer!yes -> NODE(x)
                      else answer!no -> NODE(x))

INT = union(union(i.add,i.query),i.answer)


assert CONJUNTO:[deadlock free]